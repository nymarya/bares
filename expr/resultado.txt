expressÃµes lidas:
 ' 32767 - 32768 + 3 '
' 5 + -32766 '
' 5 + -32769 '
' 12 + 3 '
' -3+-5+-6 '
' 12 + 3     -3 + -34 '
' +12 '
' 1.3 * 4 '
' a + 4 '
'  	        '
===============================================================================
>>> Parsing "32767 - 32768 + 3"
>>> Expression SUCCESSFULLY parsed!
>>> Tokens: { <32767,OPERAND> <-,OPERATOR> <32768,OPERAND> <+,OPERATOR> <3,OPERAND> }
===============================================================================
>>> Parsing "5 + -32766"
>>> Expression SUCCESSFULLY parsed!
>>> Tokens: { <5,OPERAND> <+,OPERATOR> <-32766,OPERAND> }
===============================================================================
>>> Parsing "5 + -32769"
>>> Expression SUCCESSFULLY parsed!
>>> Tokens: { <5,OPERAND> <+,OPERATOR> <-32769,OPERAND> }
===============================================================================
>>> Parsing "12 + 3"
>>> Expression SUCCESSFULLY parsed!
>>> Tokens: { <12,OPERAND> <+,OPERATOR> <3,OPERAND> }
===============================================================================
>>> Parsing "-3+-5+-6"
>>> Expression SUCCESSFULLY parsed!
>>> Tokens: { <-3,OPERAND> <+,OPERATOR> <-5,OPERAND> <+,OPERATOR> <-6,OPERAND> }
===============================================================================
>>> Parsing "12 + 3     -3 + -34"
>>> Expression SUCCESSFULLY parsed!
>>> Tokens: { <12,OPERAND> <+,OPERATOR> <3,OPERAND> <-,OPERATOR> <3,OPERAND> <+,OPERATOR> <-34,OPERAND> }
===============================================================================
>>> Parsing "+12"
>>> Ill formed integer at column (0)!
"+12"
 ^   
>>> Tokens: { }
===============================================================================
>>> Parsing "1.3 * 4"
>>> Extraneous symbol after valid expression found at column (1)!
"1.3 * 4"
  ^      
>>> Tokens: { <1,OPERAND> }
===============================================================================
>>> Parsing "a + 4"
>>> Ill formed integer at column (0)!
"a + 4"
 ^     
>>> Tokens: { }
===============================================================================
>>> Parsing " 	       "
>>> Unexpected end of input at column (9)!
" 	       "
          ^
>>> Tokens: { }

>>> Normal parsing...
>>> Input (infix)    = 1+ 3 * ( 4 + 8 * 3 ^7)
>>> Output (postfix) = 134837^*+*+
>>> Result is: 52501
>>> Input (infix)    = 4/(5^2)+(6^2^3)
>>> Output (postfix) = 452^/623^^+
>>> Result is: 1679616

>>> Normal exiting...
